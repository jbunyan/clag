{"ast":null,"code":"import { PlayerModel } from '../player/player-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../connection.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../cards/cards.component\";\nimport * as i5 from \"../player/player.component\";\nfunction GameboardComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Connection: Up\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameboardComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Connection: Down\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameboardComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", name_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r9);\n  }\n}\nfunction GameboardComponent_div_12_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", p_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(p_r11);\n  }\n}\nfunction GameboardComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"p\");\n    i0.ɵɵtext(2, \"Make prediction!...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function GameboardComponent_div_12_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.myPrediction = $event);\n    })(\"change\", function GameboardComponent_div_12_Template_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.predictionSelected());\n    });\n    i0.ɵɵtemplate(4, GameboardComponent_div_12_option_4_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.myPrediction);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.predictionRange);\n  }\n}\nfunction GameboardComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"component-player\", 22);\n  }\n  if (rf & 2) {\n    const player_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    i0.ɵɵclassMapInterpolate1(\"player-container player-\", i_r16, \"\");\n    i0.ɵɵproperty(\"player\", player_r15);\n  }\n}\nfunction GameboardComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"component-card\", 23);\n  }\n  if (rf & 2) {\n    const card_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", card_r17)(\"hidden\", false)(\"selected\", false)(\"playable\", true);\n  }\n}\nfunction GameboardComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"component-card\", 24);\n    i0.ɵɵlistener(\"click\", function GameboardComponent_ng_template_26_Template_component_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const card_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.cardSelected(card_r18));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const card_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", card_r18)(\"hidden\", false)(\"selected\", false)(\"playable\", true);\n  }\n}\nfunction GameboardComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"p\");\n    i0.ɵɵtext(2, \"Your turn!...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameboardComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const score_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", score_r23.prediction, \" \", score_r23.made, \" \", score_r23.score, \" \");\n  }\n}\nfunction GameboardComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, GameboardComponent_div_31_div_1_Template, 2, 3, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const playerScores_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playerScores_r21);\n  }\n}\nexport class GameboardComponent {\n  constructor(connection) {\n    this.connection = connection;\n    this.names = ['John', 'Eric', 'Nancy', 'Allen', 'Gavin'];\n    this.myHand = [];\n    this.myName = \"XXX\";\n    this.predictions = [];\n    this.trick = 0;\n    this.currentTrick = [];\n    this.scoreboard = [];\n    this.predictionRequested = false;\n    this.predictionRange = [];\n    this.myPrediction = -1;\n    this.playCardRequested = false;\n    this.trumps = \"\";\n    this.players = [];\n    console.log(\"gameboard constructor\");\n    this.connection.getMessageBehaviourSubject().subscribe({\n      next: message => {\n        switch (message.messageType) {\n          case \"hand\":\n            {\n              this.myHand = message.data.hand;\n              this.players.forEach(p => {\n                p.clearDealer();\n                p.setTricksWon(0);\n              });\n              this.players[message.data.dealer].setDealer();\n              this.trumps = message.data.trumps;\n              break;\n            }\n          case \"predictionRequest\":\n            {\n              this.predictionRange = [];\n              for (let i = 0; i <= this.myHand.length; i++) {\n                this.predictionRange.push(i);\n              }\n              this.predictionRequested = true;\n              break;\n            }\n          case \"predictions\":\n            {\n              this.players[message.data.prediction.playerId].setCurrentPrediction(message.data.prediction.prediction);\n              break;\n            }\n          case \"playCard\":\n            {\n              this.playCardRequested = true;\n              break;\n            }\n          case \"cardPlayed\":\n            {\n              this.currentTrick.push(message.data.card);\n              break;\n            }\n          case \"trickResult\":\n            {\n              this.currentTrick = [];\n              let t = this.players[message.data.trickResult.winningPlayer].getTricksWon();\n              this.players[message.data.trickResult.winningPlayer].setTricksWon(t + 1);\n              break;\n            }\n          case \"newPlayer\":\n            {\n              this.addPlayer(message);\n              break;\n            }\n          case \"scoreboard\":\n            {\n              this.scoreboard = message.data.scoreboard;\n              break;\n            }\n          default:\n            {\n              console.log(\"dashboard: ignoring message\");\n            }\n        }\n      }\n    });\n  }\n  addPlayer(message) {\n    let p = new PlayerModel();\n    p.setName(message.data.name);\n    this.players.push(p);\n  }\n  playerSelected() {\n    this.connection.send(\"register\", {\n      \"name\": this.myName\n    });\n  }\n  predictionSelected() {\n    this.connection.send(\"prediction\", {\n      \"prediction\": this.myPrediction\n    });\n    this.predictionRequested = false;\n  }\n  cardSelected(card) {\n    if (this.playCardRequested) {\n      this.connection.send(\"card\", {\n        \"card\": card\n      });\n      this.playCardRequested = false;\n      let index = this.myHand.findIndex(c => c === card);\n      this.myHand.splice(index, 1);\n    }\n  }\n  newGame() {\n    console.log(\"New game\");\n    this.connection.send(\"newGame\");\n  }\n  static #_ = this.ɵfac = function GameboardComponent_Factory(t) {\n    return new (t || GameboardComponent)(i0.ɵɵdirectiveInject(i1.ConnectionService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 32,\n    vars: 11,\n    consts: [[1, \"main-container\"], [1, \"title\"], [1, \"lhs-panel\"], [1, \"connection-status\"], [4, \"ngIf\"], [3, \"click\"], [1, \"player-selection\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"my-prediction\", 4, \"ngIf\"], [1, \"game-board\"], [1, \"playing-area\"], [1, \"players\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"current-trick\"], [1, \"trumps\"], [1, \"my-hand\"], [\"class\", \"play-card\", 4, \"ngIf\"], [1, \"scores\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"], [1, \"my-prediction\"], [3, \"player\"], [1, \"myhand-card\", 3, \"value\", \"hidden\", \"selected\", \"playable\"], [1, \"myhand-card\", 3, \"value\", \"hidden\", \"selected\", \"playable\", \"click\"], [1, \"play-card\"], [\"style\", \"display: inline-block\", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"inline-block\"]],\n    template: function GameboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Clag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵtemplate(5, GameboardComponent_p_5_Template, 2, 0, \"p\", 4);\n        i0.ɵɵtemplate(6, GameboardComponent_p_6_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function GameboardComponent_Template_button_click_7_listener() {\n          return ctx.newGame();\n        });\n        i0.ɵɵtext(8, \"New Game\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function GameboardComponent_Template_select_ngModelChange_10_listener($event) {\n          return ctx.myName = $event;\n        })(\"change\", function GameboardComponent_Template_select_change_10_listener() {\n          return ctx.playerSelected();\n        });\n        i0.ɵɵtemplate(11, GameboardComponent_option_11_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, GameboardComponent_div_12_Template, 5, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12);\n        i0.ɵɵtemplate(16, GameboardComponent_ng_template_16_Template, 1, 4, \"ng-template\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 14);\n        i0.ɵɵtemplate(18, GameboardComponent_ng_template_18_Template, 1, 4, \"ng-template\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 15)(20, \"div\");\n        i0.ɵɵtext(21, \"Trumps\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 16)(25, \"div\");\n        i0.ɵɵtemplate(26, GameboardComponent_ng_template_26_Template, 1, 4, \"ng-template\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(27, GameboardComponent_div_27_Template, 3, 0, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 18)(29, \"div\");\n        i0.ɵɵtext(30, \"Scores:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, GameboardComponent_div_31_Template, 2, 1, \"div\", 19);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.connection.isConnected());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.connection.isConnected());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.myName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.names);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.predictionRequested);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.players);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.currentTrick);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.trumps);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.myHand);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.playCardRequested);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.scoreboard);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.CardComponent, i5.PlayerComponent],\n    styles: [\".main-container[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: green;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  color: white;\\n  position: absolute;\\n  top: 20px;\\n  left: 20px;\\n  font-size: 2em;\\n  height: 15vh;\\n}\\n\\n.lhs-panel[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10vh;\\n  left: 10px;\\n  height: 87vh;\\n  width: 15vw;\\n  background-color: lightgrey;\\n}\\n\\n.game-board[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 3vh;\\n  left: 18vw;\\n  width: 80vw;\\n  height: var(--game-board-height);\\n  background-color: lightgrey;\\n}\\n\\n.trumps[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 2vh;\\n  left: 2vw;\\n  height: 3vh;\\n  width: 5vw;\\n  background-color: beige;\\n  color: black;\\n  border-radius: 1vh;\\n  padding: 1vw 1vh 1vw 1vh;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.player-container[_ngcontent-%COMP%] {\\n  height: 7vh;\\n  width: 15%;\\n  background-color: beige;\\n  transform: translate(-50%,-50%);\\n}\\n\\n.player-0[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10vh;\\n  left: 50%;\\n}\\n\\n.player-1[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: calc(var(--playing-area-height)/2);\\n  left: 85%;\\n}\\n\\n.player-2[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: calc(var(--playing-area-height) - 10vh);\\n  left: 50%;\\n}\\n\\n.player-3[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: calc(var(--playing-area-height)/2);\\n  left: 15%;\\n}\\n\\n.scores[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n\\n.playing-area[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: var(--playing-area-height);\\n  width: 100%;\\n  background-color: darkgrey;\\n}\\n\\n.my-hand[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 74vh;\\n  left: 0;\\n  height: 20vh;\\n  width: 100%;\\n  background-color: lightgreen;\\n}\\n\\n.myhand-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n}\\n\\n.myhand-card[_ngcontent-%COMP%]:nth-child(1) {\\n  left: 10px;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(2) {\\n  left: 50px;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(3) {\\n  left: 90px;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(4) {\\n  left: 130px;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(5) {\\n  left: 170px;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(6) {\\n  left: 200px;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(7) {\\n  left: 230px;\\n  top: 1vh;\\n}\\n.play-card[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 150px;\\n}\\n\\n.current-trick[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: calc((var(--playing-area-height))/2);\\n  left: 50%;\\n  height: 20vh;\\n  width: 20vw;\\n  transform: translate(-50%,-50%);\\n  background-color: lightgreen;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZWJvYXJkL2dhbWVib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixPQUFPO0VBQ1AsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsU0FBUztFQUNULFVBQVU7RUFDVixjQUFjO0VBQ2QsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsWUFBWTtFQUNaLFdBQVc7RUFDWCwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFVBQVU7RUFDVixXQUFXO0VBQ1gsZ0NBQWdDO0VBQ2hDLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULFdBQVc7RUFDWCxVQUFVO0VBQ1YsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsd0JBQXdCO0VBQ3hCLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFNBQVM7QUFDWDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix1Q0FBdUM7RUFDdkMsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLDRDQUE0QztFQUM1QyxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsdUNBQXVDO0VBQ3ZDLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLGtDQUFrQztFQUNsQyxXQUFXO0VBQ1gsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxPQUFPO0VBQ1AsWUFBWTtFQUNaLFdBQVc7RUFDWCw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsUUFBUTtBQUNWO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsUUFBUTtBQUNWO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsUUFBUTtBQUNWO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsUUFBUTtBQUNWO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsUUFBUTtBQUNWO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsUUFBUTtBQUNWO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsUUFBUTtBQUNWO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlDQUF5QztFQUN6QyxTQUFTO0VBQ1QsWUFBWTtFQUNaLFdBQVc7RUFDWCwrQkFBK0I7RUFDL0IsNEJBQTRCO0FBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4tY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLnRpdGxlIHtcbiAgY29sb3I6IHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMjBweDtcbiAgZm9udC1zaXplOiAyZW07XG4gIGhlaWdodDogMTV2aDtcbn1cblxuLmxocy1wYW5lbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMHZoO1xuICBsZWZ0OiAxMHB4O1xuICBoZWlnaHQ6IDg3dmg7XG4gIHdpZHRoOiAxNXZ3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XG59XG5cbi5nYW1lLWJvYXJkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDN2aDtcbiAgbGVmdDogMTh2dztcbiAgd2lkdGg6IDgwdnc7XG4gIGhlaWdodDogdmFyKC0tZ2FtZS1ib2FyZC1oZWlnaHQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XG59XG5cbi50cnVtcHMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMnZoO1xuICBsZWZ0OiAydnc7XG4gIGhlaWdodDogM3ZoO1xuICB3aWR0aDogNXZ3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBiZWlnZTtcbiAgY29sb3I6IGJsYWNrO1xuICBib3JkZXItcmFkaXVzOiAxdmg7XG4gIHBhZGRpbmc6IDF2dyAxdmggMXZ3IDF2aDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4ucGxheWVyLWNvbnRhaW5lciB7XG4gIGhlaWdodDogN3ZoO1xuICB3aWR0aDogMTUlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBiZWlnZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbn1cblxuLnBsYXllci0wIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwdmg7XG4gIGxlZnQ6IDUwJTtcbn1cblxuLnBsYXllci0xIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IGNhbGModmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCkvMik7XG4gIGxlZnQ6IDg1JTtcbn1cblxuLnBsYXllci0yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IGNhbGModmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCkgLSAxMHZoKTtcbiAgbGVmdDogNTAlO1xufVxuXG4ucGxheWVyLTMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYyh2YXIoLS1wbGF5aW5nLWFyZWEtaGVpZ2h0KS8yKTtcbiAgbGVmdDogMTUlO1xufVxuXG4uc2NvcmVzIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ucGxheWluZy1hcmVhIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGhlaWdodDogdmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCk7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JleTtcbn1cblxuLm15LWhhbmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNzR2aDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAyMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjtcbn1cblxuLm15aGFuZC1jYXJkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDEpIHtcbiAgbGVmdDogMTBweDtcbiAgdG9wOiAxdmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDIpIHtcbiAgbGVmdDogNTBweDtcbiAgdG9wOiAxdmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDMpIHtcbiAgbGVmdDogOTBweDtcbiAgdG9wOiAxdmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDQpIHtcbiAgbGVmdDogMTMwcHg7XG4gIHRvcDogMXZoO1xufVxuLm15aGFuZC1jYXJkOm50aC1jaGlsZCg1KSB7XG4gIGxlZnQ6IDE3MHB4O1xuICB0b3A6IDF2aDtcbn1cbi5teWhhbmQtY2FyZDpudGgtY2hpbGQoNikge1xuICBsZWZ0OiAyMDBweDtcbiAgdG9wOiAxdmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDcpIHtcbiAgbGVmdDogMjMwcHg7XG4gIHRvcDogMXZoO1xufVxuLnBsYXktY2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAxNTBweDtcbn1cblxuLmN1cnJlbnQtdHJpY2sge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygodmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCkpLzIpO1xuICBsZWZ0OiA1MCU7XG4gIGhlaWdodDogMjB2aDtcbiAgd2lkdGg6IDIwdnc7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["PlayerModel","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","name_r9","ɵɵadvance","ɵɵtextInterpolate","p_r11","ɵɵlistener","GameboardComponent_div_12_Template_select_ngModelChange_3_listener","$event","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","myPrediction","GameboardComponent_div_12_Template_select_change_3_listener","ctx_r14","predictionSelected","ɵɵtemplate","GameboardComponent_div_12_option_4_Template","ctx_r3","predictionRange","ɵɵelement","ɵɵclassMapInterpolate1","i_r16","player_r15","card_r17","GameboardComponent_ng_template_26_Template_component_card_click_0_listener","restoredCtx","_r20","card_r18","$implicit","ctx_r19","cardSelected","ɵɵtextInterpolate3","score_r23","prediction","made","score","GameboardComponent_div_31_div_1_Template","playerScores_r21","GameboardComponent","constructor","connection","names","myHand","myName","predictions","trick","currentTrick","scoreboard","predictionRequested","playCardRequested","trumps","players","console","log","getMessageBehaviourSubject","subscribe","next","message","messageType","data","hand","forEach","p","clearDealer","setTricksWon","dealer","setDealer","i","length","push","playerId","setCurrentPrediction","card","t","trickResult","winningPlayer","getTricksWon","addPlayer","setName","name","playerSelected","send","index","findIndex","c","splice","newGame","_","ɵɵdirectiveInject","i1","ConnectionService","_2","selectors","decls","vars","consts","template","GameboardComponent_Template","rf","ctx","GameboardComponent_p_5_Template","GameboardComponent_p_6_Template","GameboardComponent_Template_button_click_7_listener","GameboardComponent_Template_select_ngModelChange_10_listener","GameboardComponent_Template_select_change_10_listener","GameboardComponent_option_11_Template","GameboardComponent_div_12_Template","GameboardComponent_ng_template_16_Template","GameboardComponent_ng_template_18_Template","GameboardComponent_ng_template_26_Template","GameboardComponent_div_27_Template","GameboardComponent_div_31_Template","isConnected"],"sources":["/Users/john/Projects/Clag/ClagClient2/src/app/gameboard/gameboard.component.ts","/Users/john/Projects/Clag/ClagClient2/src/app/gameboard/gameboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConnectionService, Message } from '../connection.service';\nimport { PlayerModel } from '../player/player-model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './gameboard.component.html',\n  styleUrls: [ './gameboard.component.css' ]\n})\nexport class GameboardComponent {\n\n  names: string[] = ['John','Eric','Nancy','Allen','Gavin']\n  myHand: string[] = []\n  myName: string = \"XXX\"\n  predictions: number[] = []\n  trick: number = 0\n  currentTrick: string[] = []\n  scoreboard: any[][] = []\n  predictionRequested: boolean = false\n  predictionRange: number[] = []\n  myPrediction: number = -1\n  playCardRequested: boolean = false\n  trumps: string = \"\"\n\n  players: PlayerModel[] = []\n\n  constructor(\n    public connection: ConnectionService\n  ) {\n    console.log(\"gameboard constructor\")\n\n    this.connection.getMessageBehaviourSubject().subscribe({\n      next: (message:Message) => {\n        switch(message.messageType) {\n          case \"hand\": {\n            this.myHand = message.data.hand\n            this.players.forEach(p => {\n              p.clearDealer()\n              p.setTricksWon(0)\n            })\n            this.players[message.data.dealer].setDealer()\n            this.trumps = message.data.trumps\n            break\n          }\n          case \"predictionRequest\": {\n            this.predictionRange = []\n            for (let i = 0; i <= this.myHand.length ; i++) {\n              this.predictionRange.push(i);\n           }\n            this.predictionRequested = true\n            break\n          }\n          case \"predictions\": {\n            this.players[message.data.prediction.playerId].setCurrentPrediction(message.data.prediction.prediction)\n            break\n          }\n          case \"playCard\": {\n            this.playCardRequested = true\n            break\n          }\n          case \"cardPlayed\": {\n            this.currentTrick.push(message.data.card)\n            break\n          }\n          case \"trickResult\": {\n            this.currentTrick = []\n            let t = this.players[message.data.trickResult.winningPlayer].getTricksWon()\n            this.players[message.data.trickResult.winningPlayer].setTricksWon(t + 1)\n            break\n          }\n          case \"newPlayer\": {\n            this.addPlayer(message)\n            break\n          }\n          case \"scoreboard\": {\n            this.scoreboard = message.data.scoreboard\n            break\n          }\n          default: {\n            console.log(\"dashboard: ignoring message\")\n          }\n        }\n      }\n    })\n  }\n\n  addPlayer(message: Message) {\n    let p = new PlayerModel()\n    p.setName(message.data.name)\n    this.players.push(p)\n  }\n\n  playerSelected() {\n    this.connection.send(\"register\",{\"name\":this.myName});\n  }\n\n  predictionSelected() {\n    this.connection.send(\"prediction\",{\"prediction\":this.myPrediction});\n    this.predictionRequested = false\n  }\n\n  cardSelected(card: string) {\n    if (this.playCardRequested) {\n      this.connection.send(\"card\",{\"card\":card});\n      this.playCardRequested = false\n      let index = this.myHand.findIndex(c => c === card)\n      this.myHand.splice(index,1)\n    }\n  }\n\n  newGame() {\n    console.log(\"New game\")\n    this.connection.send(\"newGame\")\n  }\n}\n","\n<div class=\"main-container\">\n\n  <div class=\"title\">Clag</div>\n\n  <div class=\"lhs-panel\">\n    <div class=\"connection-status\">\n      <p *ngIf=\"connection.isConnected()\">Connection: Up</p>\n      <p *ngIf=\"!connection.isConnected()\">Connection: Down</p>\n      <button (click)=\"newGame()\">New Game</button>\n    </div>\n  \n    <div class=\"player-selection\">\n      <select [(ngModel)]=\"myName\" (change)=\"playerSelected()\">\n        <option *ngFor=\"let name of names\" [ngValue]=\"name\">{{name}}</option>\n      </select>\n    </div>\n\n    <div class=\"my-prediction\" *ngIf=\"predictionRequested\">\n      <p>Make prediction!...</p>\n      <select [(ngModel)]=\"myPrediction\" (change)=\"predictionSelected()\">\n        <option *ngFor=\"let p of predictionRange\" [ngValue]=\"p\">{{p}}</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"game-board\">\n\n    <div class=\"playing-area\">\n\n      <div class=\"players\">\n        <ng-template ngFor let-player let-i=\"index\" [ngForOf]=\"players\">\n          <component-player class=\"player-container player-{{i}}\" [player]=\"player\"></component-player>\n        </ng-template>\n      </div>\n\n      <div class=\"current-trick\">\n        <ng-template ngFor let-card [ngForOf]=\"currentTrick\">\n          <component-card class=\"myhand-card\" [value]=\"card\" [hidden]=\"false\" [selected]=\"false\" [playable]=\"true\"></component-card>\n        </ng-template>      \n      </div>\n\n    </div>\n\n    <div class=\"trumps\"><div>Trumps</div><div>{{trumps}}</div></div>\n\n    <div class=\"my-hand\">\n      <div>\n        <ng-template ngFor let-card [ngForOf]=\"myHand\">\n          <component-card (click)=\"cardSelected(card)\" class=\"myhand-card\" [value]=\"card\" [hidden]=\"false\" [selected]=\"false\" [playable]=\"true\"></component-card>\n        </ng-template>\n      </div>\n    </div>\n\n    <div class=\"play-card\" *ngIf=\"playCardRequested\">\n      <p>Your turn!...</p>\n    </div>\n  </div>\n\n  <div class=\"scores\">\n    <div>Scores:</div>\n    <div *ngFor=\"let playerScores of scoreboard\">\n      <div style=\"display: inline-block\" *ngFor=\"let score of playerScores\">\n        {{score.prediction}} {{score.made}} {{score.score}}\n      </div>\n    </div>\n  </div>\n\n</div>\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,wBAAwB;;;;;;;;;ICK9CC,EAAA,CAAAC,cAAA,QAAoC;IAAAD,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IACtDH,EAAA,CAAAC,cAAA,QAAqC;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAMvDH,EAAA,CAAAC,cAAA,iBAAoD;IAAAD,EAAA,CAAAE,MAAA,GAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAlCH,EAAA,CAAAI,UAAA,YAAAC,OAAA,CAAgB;IAACL,EAAA,CAAAM,SAAA,GAAQ;IAARN,EAAA,CAAAO,iBAAA,CAAAF,OAAA,CAAQ;;;;;IAO5DL,EAAA,CAAAC,cAAA,iBAAwD;IAAAD,EAAA,CAAAE,MAAA,GAAK;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAA5BH,EAAA,CAAAI,UAAA,YAAAI,KAAA,CAAa;IAACR,EAAA,CAAAM,SAAA,GAAK;IAALN,EAAA,CAAAO,iBAAA,CAAAC,KAAA,CAAK;;;;;;IAHjER,EAAA,CAAAC,cAAA,cAAuD;IAClDD,EAAA,CAAAE,MAAA,0BAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC1BH,EAAA,CAAAC,cAAA,gBAAmE;IAA3DD,EAAA,CAAAS,UAAA,2BAAAC,mEAAAC,MAAA;MAAAX,EAAA,CAAAY,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAd,EAAA,CAAAe,aAAA;MAAA,OAAAf,EAAA,CAAAgB,WAAA,CAAAF,OAAA,CAAAG,YAAA,GAAAN,MAAA;IAAA,EAA0B,oBAAAO,4DAAA;MAAAlB,EAAA,CAAAY,aAAA,CAAAC,IAAA;MAAA,MAAAM,OAAA,GAAAnB,EAAA,CAAAe,aAAA;MAAA,OAAWf,EAAA,CAAAgB,WAAA,CAAAG,OAAA,CAAAC,kBAAA,EAAoB;IAAA,EAA/B;IAChCpB,EAAA,CAAAqB,UAAA,IAAAC,2CAAA,oBAAsE;IACxEtB,EAAA,CAAAG,YAAA,EAAS;;;;IAFDH,EAAA,CAAAM,SAAA,GAA0B;IAA1BN,EAAA,CAAAI,UAAA,YAAAmB,MAAA,CAAAN,YAAA,CAA0B;IACVjB,EAAA,CAAAM,SAAA,GAAkB;IAAlBN,EAAA,CAAAI,UAAA,YAAAmB,MAAA,CAAAC,eAAA,CAAkB;;;;;IAWtCxB,EAAA,CAAAyB,SAAA,2BAA6F;;;;;IAA3EzB,EAAA,CAAA0B,sBAAA,6BAAAC,KAAA,KAAqC;IAAC3B,EAAA,CAAAI,UAAA,WAAAwB,UAAA,CAAiB;;;;;IAMzE5B,EAAA,CAAAyB,SAAA,yBAA0H;;;;IAAtFzB,EAAA,CAAAI,UAAA,UAAAyB,QAAA,CAAc;;;;;;IAWlD7B,EAAA,CAAAC,cAAA,yBAAsI;IAAtHD,EAAA,CAAAS,UAAA,mBAAAqB,2EAAA;MAAA,MAAAC,WAAA,GAAA/B,EAAA,CAAAY,aAAA,CAAAoB,IAAA;MAAA,MAAAC,QAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAAnC,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAmB,OAAA,CAAAC,YAAA,CAAAH,QAAA,CAAkB;IAAA,EAAC;IAA0FjC,EAAA,CAAAG,YAAA,EAAiB;;;;IAAtFH,EAAA,CAAAI,UAAA,UAAA6B,QAAA,CAAc;;;;;IAKrFjC,EAAA,CAAAC,cAAA,cAAiD;IAC5CD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAOpBH,EAAA,CAAAC,cAAA,cAAsE;IACpED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAM,SAAA,GACF;IADEN,EAAA,CAAAqC,kBAAA,MAAAC,SAAA,CAAAC,UAAA,OAAAD,SAAA,CAAAE,IAAA,OAAAF,SAAA,CAAAG,KAAA,MACF;;;;;IAHFzC,EAAA,CAAAC,cAAA,UAA6C;IAC3CD,EAAA,CAAAqB,UAAA,IAAAqB,wCAAA,kBAEM;IACR1C,EAAA,CAAAG,YAAA,EAAM;;;;IAHiDH,EAAA,CAAAM,SAAA,GAAe;IAAfN,EAAA,CAAAI,UAAA,YAAAuC,gBAAA,CAAe;;;ADrD1E,OAAM,MAAOC,kBAAkB;EAiB7BC,YACSC,UAA6B;IAA7B,KAAAA,UAAU,GAAVA,UAAU;IAhBnB,KAAAC,KAAK,GAAa,CAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC;IACzD,KAAAC,MAAM,GAAa,EAAE;IACrB,KAAAC,MAAM,GAAW,KAAK;IACtB,KAAAC,WAAW,GAAa,EAAE;IAC1B,KAAAC,KAAK,GAAW,CAAC;IACjB,KAAAC,YAAY,GAAa,EAAE;IAC3B,KAAAC,UAAU,GAAY,EAAE;IACxB,KAAAC,mBAAmB,GAAY,KAAK;IACpC,KAAA9B,eAAe,GAAa,EAAE;IAC9B,KAAAP,YAAY,GAAW,CAAC,CAAC;IACzB,KAAAsC,iBAAiB,GAAY,KAAK;IAClC,KAAAC,MAAM,GAAW,EAAE;IAEnB,KAAAC,OAAO,GAAkB,EAAE;IAKzBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAEpC,IAAI,CAACb,UAAU,CAACc,0BAA0B,EAAE,CAACC,SAAS,CAAC;MACrDC,IAAI,EAAGC,OAAe,IAAI;QACxB,QAAOA,OAAO,CAACC,WAAW;UACxB,KAAK,MAAM;YAAE;cACX,IAAI,CAAChB,MAAM,GAAGe,OAAO,CAACE,IAAI,CAACC,IAAI;cAC/B,IAAI,CAACT,OAAO,CAACU,OAAO,CAACC,CAAC,IAAG;gBACvBA,CAAC,CAACC,WAAW,EAAE;gBACfD,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;cACnB,CAAC,CAAC;cACF,IAAI,CAACb,OAAO,CAACM,OAAO,CAACE,IAAI,CAACM,MAAM,CAAC,CAACC,SAAS,EAAE;cAC7C,IAAI,CAAChB,MAAM,GAAGO,OAAO,CAACE,IAAI,CAACT,MAAM;cACjC;;UAEF,KAAK,mBAAmB;YAAE;cACxB,IAAI,CAAChC,eAAe,GAAG,EAAE;cACzB,KAAK,IAAIiD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACzB,MAAM,CAAC0B,MAAM,EAAGD,CAAC,EAAE,EAAE;gBAC7C,IAAI,CAACjD,eAAe,CAACmD,IAAI,CAACF,CAAC,CAAC;;cAE9B,IAAI,CAACnB,mBAAmB,GAAG,IAAI;cAC/B;;UAEF,KAAK,aAAa;YAAE;cAClB,IAAI,CAACG,OAAO,CAACM,OAAO,CAACE,IAAI,CAAC1B,UAAU,CAACqC,QAAQ,CAAC,CAACC,oBAAoB,CAACd,OAAO,CAACE,IAAI,CAAC1B,UAAU,CAACA,UAAU,CAAC;cACvG;;UAEF,KAAK,UAAU;YAAE;cACf,IAAI,CAACgB,iBAAiB,GAAG,IAAI;cAC7B;;UAEF,KAAK,YAAY;YAAE;cACjB,IAAI,CAACH,YAAY,CAACuB,IAAI,CAACZ,OAAO,CAACE,IAAI,CAACa,IAAI,CAAC;cACzC;;UAEF,KAAK,aAAa;YAAE;cAClB,IAAI,CAAC1B,YAAY,GAAG,EAAE;cACtB,IAAI2B,CAAC,GAAG,IAAI,CAACtB,OAAO,CAACM,OAAO,CAACE,IAAI,CAACe,WAAW,CAACC,aAAa,CAAC,CAACC,YAAY,EAAE;cAC3E,IAAI,CAACzB,OAAO,CAACM,OAAO,CAACE,IAAI,CAACe,WAAW,CAACC,aAAa,CAAC,CAACX,YAAY,CAACS,CAAC,GAAG,CAAC,CAAC;cACxE;;UAEF,KAAK,WAAW;YAAE;cAChB,IAAI,CAACI,SAAS,CAACpB,OAAO,CAAC;cACvB;;UAEF,KAAK,YAAY;YAAE;cACjB,IAAI,CAACV,UAAU,GAAGU,OAAO,CAACE,IAAI,CAACZ,UAAU;cACzC;;UAEF;YAAS;cACPK,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;;;MAGhD;KACD,CAAC;EACJ;EAEAwB,SAASA,CAACpB,OAAgB;IACxB,IAAIK,CAAC,GAAG,IAAIrE,WAAW,EAAE;IACzBqE,CAAC,CAACgB,OAAO,CAACrB,OAAO,CAACE,IAAI,CAACoB,IAAI,CAAC;IAC5B,IAAI,CAAC5B,OAAO,CAACkB,IAAI,CAACP,CAAC,CAAC;EACtB;EAEAkB,cAAcA,CAAA;IACZ,IAAI,CAACxC,UAAU,CAACyC,IAAI,CAAC,UAAU,EAAC;MAAC,MAAM,EAAC,IAAI,CAACtC;IAAM,CAAC,CAAC;EACvD;EAEA7B,kBAAkBA,CAAA;IAChB,IAAI,CAAC0B,UAAU,CAACyC,IAAI,CAAC,YAAY,EAAC;MAAC,YAAY,EAAC,IAAI,CAACtE;IAAY,CAAC,CAAC;IACnE,IAAI,CAACqC,mBAAmB,GAAG,KAAK;EAClC;EAEAlB,YAAYA,CAAC0C,IAAY;IACvB,IAAI,IAAI,CAACvB,iBAAiB,EAAE;MAC1B,IAAI,CAACT,UAAU,CAACyC,IAAI,CAAC,MAAM,EAAC;QAAC,MAAM,EAACT;MAAI,CAAC,CAAC;MAC1C,IAAI,CAACvB,iBAAiB,GAAG,KAAK;MAC9B,IAAIiC,KAAK,GAAG,IAAI,CAACxC,MAAM,CAACyC,SAAS,CAACC,CAAC,IAAIA,CAAC,KAAKZ,IAAI,CAAC;MAClD,IAAI,CAAC9B,MAAM,CAAC2C,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;;EAE/B;EAEAI,OAAOA,CAAA;IACLlC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,IAAI,CAACb,UAAU,CAACyC,IAAI,CAAC,SAAS,CAAC;EACjC;EAAC,QAAAM,CAAA,G;qBAxGUjD,kBAAkB,EAAA5C,EAAA,CAAA8F,iBAAA,CAAAC,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBrD,kBAAkB;IAAAsD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BxG,EAAA,CAAAC,cAAA,aAA4B;QAEPD,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAE7BH,EAAA,CAAAC,cAAA,aAAuB;QAEnBD,EAAA,CAAAqB,UAAA,IAAAqF,+BAAA,eAAsD;QACtD1G,EAAA,CAAAqB,UAAA,IAAAsF,+BAAA,eAAyD;QACzD3G,EAAA,CAAAC,cAAA,gBAA4B;QAApBD,EAAA,CAAAS,UAAA,mBAAAmG,oDAAA;UAAA,OAASH,GAAA,CAAAb,OAAA,EAAS;QAAA,EAAC;QAAC5F,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAG/CH,EAAA,CAAAC,cAAA,aAA8B;QACpBD,EAAA,CAAAS,UAAA,2BAAAoG,6DAAAlG,MAAA;UAAA,OAAA8F,GAAA,CAAAxD,MAAA,GAAAtC,MAAA;QAAA,EAAoB,oBAAAmG,sDAAA;UAAA,OAAWL,GAAA,CAAAnB,cAAA,EAAgB;QAAA,EAA3B;QAC1BtF,EAAA,CAAAqB,UAAA,KAAA0F,qCAAA,oBAAqE;QACvE/G,EAAA,CAAAG,YAAA,EAAS;QAGXH,EAAA,CAAAqB,UAAA,KAAA2F,kCAAA,iBAKM;QACRhH,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,eAAwB;QAKlBD,EAAA,CAAAqB,UAAA,KAAA4F,0CAAA,0BAEc;QAChBjH,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,eAA2B;QACzBD,EAAA,CAAAqB,UAAA,KAAA6F,0CAAA,0BAEc;QAChBlH,EAAA,CAAAG,YAAA,EAAM;QAIRH,EAAA,CAAAC,cAAA,eAAoB;QAAKD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAAAH,EAAA,CAAAC,cAAA,WAAK;QAAAD,EAAA,CAAAE,MAAA,IAAU;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAE1DH,EAAA,CAAAC,cAAA,eAAqB;QAEjBD,EAAA,CAAAqB,UAAA,KAAA8F,0CAAA,0BAEc;QAChBnH,EAAA,CAAAG,YAAA,EAAM;QAGRH,EAAA,CAAAqB,UAAA,KAAA+F,kCAAA,kBAEM;QACRpH,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,eAAoB;QACbD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAClBH,EAAA,CAAAqB,UAAA,KAAAgG,kCAAA,kBAIM;QACRrH,EAAA,CAAAG,YAAA,EAAM;;;QA3DEH,EAAA,CAAAM,SAAA,GAA8B;QAA9BN,EAAA,CAAAI,UAAA,SAAAqG,GAAA,CAAA3D,UAAA,CAAAwE,WAAA,GAA8B;QAC9BtH,EAAA,CAAAM,SAAA,GAA+B;QAA/BN,EAAA,CAAAI,UAAA,UAAAqG,GAAA,CAAA3D,UAAA,CAAAwE,WAAA,GAA+B;QAK3BtH,EAAA,CAAAM,SAAA,GAAoB;QAApBN,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAAxD,MAAA,CAAoB;QACDjD,EAAA,CAAAM,SAAA,GAAQ;QAARN,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAA1D,KAAA,CAAQ;QAIT/C,EAAA,CAAAM,SAAA,GAAyB;QAAzBN,EAAA,CAAAI,UAAA,SAAAqG,GAAA,CAAAnD,mBAAA,CAAyB;QAaLtD,EAAA,CAAAM,SAAA,GAAmB;QAAnBN,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAAhD,OAAA,CAAmB;QAMnCzD,EAAA,CAAAM,SAAA,GAAwB;QAAxBN,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAArD,YAAA,CAAwB;QAOdpD,EAAA,CAAAM,SAAA,GAAU;QAAVN,EAAA,CAAAO,iBAAA,CAAAkG,GAAA,CAAAjD,MAAA,CAAU;QAIpBxD,EAAA,CAAAM,SAAA,GAAkB;QAAlBN,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAAzD,MAAA,CAAkB;QAM1BhD,EAAA,CAAAM,SAAA,GAAuB;QAAvBN,EAAA,CAAAI,UAAA,SAAAqG,GAAA,CAAAlD,iBAAA,CAAuB;QAOjBvD,EAAA,CAAAM,SAAA,GAAa;QAAbN,EAAA,CAAAI,UAAA,YAAAqG,GAAA,CAAApD,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}