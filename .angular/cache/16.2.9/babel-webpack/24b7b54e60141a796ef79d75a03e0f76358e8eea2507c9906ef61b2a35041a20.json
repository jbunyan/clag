{"ast":null,"code":"import { CardUtils } from './card-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class CardComponent {\n  constructor() {\n    this.value = \"\";\n    this.selected = false;\n    this.playable = false;\n    this.hidden = false;\n    this.colourClass = \"\";\n    this.selectedClass = \"\";\n    this.notPlayableClass = \"\";\n    this.suitSymbol = \"\";\n    this.cardValue = \"\";\n    this.cardString = \"\";\n    this.cardClassHidden = \"\";\n    this.cardClasses = \"\";\n    this.valueClasses = \"\";\n    console.log(\"Card component constructor\");\n  }\n  ngOnInit() {\n    this.colourClass = this.getClass();\n    this.selectedClass = this.selected && this.playable ? \"card-selected\" : \"\";\n    this.notPlayableClass = this.selected && !this.playable ? \" card-selected-not-playable bounce\" : \"\";\n    this.suitSymbol = CardUtils.getSuitSymbol(this.value);\n    this.cardValue = CardUtils.getValue(this.value);\n    this.cardString = this.cardValue + this.suitSymbol;\n    this.cardClassHidden = this.hidden ? \" card-hidden\" : \"\";\n    this.cardClasses = \"card-card \" + this.selectedClass + this.cardClassHidden + this.notPlayableClass;\n    this.valueClasses = \"card-value \" + this.colourClass;\n  }\n  getClass() {\n    const colours = {\n      'C': 'card-black',\n      'D': 'card-red',\n      'S': 'card-black',\n      'H': 'card-red'\n    };\n    let suit = CardUtils.getSuit(this.value);\n    return colours[suit];\n  }\n  static #_ = this.ɵfac = function CardComponent_Factory(t) {\n    return new (t || CardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"component-card\"]],\n    inputs: {\n      value: \"value\",\n      selected: \"selected\",\n      playable: \"playable\",\n      hidden: \"hidden\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[3, \"ngClass\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 0);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.cardClasses);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.valueClasses);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.cardString, \" \");\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\".card-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  width: 5vw;\\n  height: 15vh;\\n  background-color: white;\\n  border-radius: 1vh;\\n  border: solid 1px black;\\n  padding: 0.3vh 1vh 1vh 0.3vh;\\n  display: flex;\\n  align-items: flex-start;\\n  transition: top 1s;\\n}\\n\\n.card-selected[_ngcontent-%COMP%] {\\n  top: -30px;\\n}\\n\\n.card-hidden[_ngcontent-%COMP%] {\\n  display: none;\\n  pointer-events: none;\\n}\\n\\n.card-not-playable[_ngcontent-%COMP%] {\\n  opacity: 0.6;\\n}\\n\\n.card-not-playable-grey[_ngcontent-%COMP%] {\\n  background-color: #e0e0e0 !important;\\n}\\n\\n.card-selected-not-playable[_ngcontent-%COMP%] {\\n  animation-duration: 1s; \\n  animation-fill-mode: both; \\n}\\n\\n.card-value[_ngcontent-%COMP%] {\\n  font-size: 3vh;\\n}\\n\\n.card-red[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.card-black[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n\\n@keyframes _ngcontent-%COMP%_bounce { \\n  0%, 20%, 50%, 80%, 100% {transform: translateY(0);} \\n  40% {transform: translateY(-30px);} \\n  60% {transform: translateY(-15px);} \\n}\\n\\n.bounce[_ngcontent-%COMP%] { \\n  animation-name: _ngcontent-%COMP%_bounce; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZHMvY2FyZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sVUFBVTtFQUNWLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2Qiw0QkFBNEI7RUFDNUIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx5QkFBeUIsd0JBQXdCLENBQUM7RUFDbEQsS0FBSyw0QkFBNEIsQ0FBQztFQUNsQyxLQUFLLDRCQUE0QixDQUFDO0FBQ3BDOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtY2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogNXZ3O1xuICBoZWlnaHQ6IDE1dmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAxdmg7XG4gIGJvcmRlcjogc29saWQgMXB4IGJsYWNrO1xuICBwYWRkaW5nOiAwLjN2aCAxdmggMXZoIDAuM3ZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgdHJhbnNpdGlvbjogdG9wIDFzO1xufVxuXG4uY2FyZC1zZWxlY3RlZCB7XG4gIHRvcDogLTMwcHg7XG59XG5cbi5jYXJkLWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uY2FyZC1ub3QtcGxheWFibGUge1xuICBvcGFjaXR5OiAwLjY7XG59XG5cbi5jYXJkLW5vdC1wbGF5YWJsZS1ncmV5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMCAhaW1wb3J0YW50O1xufVxuXG4uY2FyZC1zZWxlY3RlZC1ub3QtcGxheWFibGUge1xuICBhbmltYXRpb24tZHVyYXRpb246IDFzOyBcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDsgXG59XG5cbi5jYXJkLXZhbHVlIHtcbiAgZm9udC1zaXplOiAzdmg7XG59XG5cbi5jYXJkLXJlZCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5jYXJkLWJsYWNrIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG5Aa2V5ZnJhbWVzIGJvdW5jZSB7IFxuICAwJSwgMjAlLCA1MCUsIDgwJSwgMTAwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO30gXG4gIDQwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zMHB4KTt9IFxuICA2MCUge3RyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTVweCk7fSBcbn1cblxuLmJvdW5jZSB7IFxuICBhbmltYXRpb24tbmFtZTogYm91bmNlOyBcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["CardUtils","CardComponent","constructor","value","selected","playable","hidden","colourClass","selectedClass","notPlayableClass","suitSymbol","cardValue","cardString","cardClassHidden","cardClasses","valueClasses","console","log","ngOnInit","getClass","getSuitSymbol","getValue","colours","suit","getSuit","_","_2","selectors","inputs","decls","vars","consts","template","CardComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["/Users/john/Projects/Clag/ClagClient2/src/app/cards/cards.component.ts","/Users/john/Projects/Clag/ClagClient2/src/app/cards/cards.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { CardUtils } from './card-utils'\n\n@Component({\n  selector: 'component-card',\n  templateUrl: './cards.component.html',\n  styleUrls: [ './cards.component.css' ]\n})\nexport class CardComponent implements OnInit {\n\n  @Input()\n  public value: string = \"\"\n\n  @Input()\n  public selected: boolean = false\n\n  @Input()\n  public playable: boolean = false\n\n  @Input()\n  public hidden: boolean = false\n\n  colourClass: string = \"\"\n\n  selectedClass: string = \"\"\n  notPlayableClass: string = \"\"\n  \n  suitSymbol: string = \"\"\n  cardValue: string = \"\"\n  cardString: string = \"\"\n  cardClassHidden: string = \"\"\n  cardClasses: string = \"\"\n  valueClasses: string = \"\"\n\n  constructor() {\n    console.log(\"Card component constructor\")\n  }\n\n  ngOnInit() {\n    this.colourClass = this.getClass()\n\n    this.selectedClass = this.selected && this.playable ? \"card-selected\" : \"\"\n    this.notPlayableClass = this.selected && !this.playable ? \" card-selected-not-playable bounce\" : \"\"\n    \n    this.suitSymbol = CardUtils.getSuitSymbol(this.value)\n    this.cardValue = CardUtils.getValue(this.value)\n    this.cardString = this.cardValue + this.suitSymbol\n    this.cardClassHidden = this.hidden ? \" card-hidden\" : \"\"\n    this.cardClasses = \"card-card \" + this.selectedClass + this.cardClassHidden + this.notPlayableClass\n    this.valueClasses = \"card-value \" + this.colourClass\n  }\n\n  getClass(): string {\n\n    const colours: {[key:string]:string} = {\n      'C': 'card-black',\n      'D': 'card-red',\n      'S': 'card-black',\n      'H': 'card-red'\n    }\n    let suit = CardUtils.getSuit(this.value)\n\n    return colours[suit]\n  }\n\n}","<div [ngClass]=\"cardClasses\">\n  <div [ngClass]=\"valueClasses\">\n    {{cardString}}\n  </div>\n</div>"],"mappings":"AACA,SAASA,SAAS,QAAQ,cAAc;;;AAOxC,OAAM,MAAOC,aAAa;EA0BxBC,YAAA;IAvBO,KAAAC,KAAK,GAAW,EAAE;IAGlB,KAAAC,QAAQ,GAAY,KAAK;IAGzB,KAAAC,QAAQ,GAAY,KAAK;IAGzB,KAAAC,MAAM,GAAY,KAAK;IAE9B,KAAAC,WAAW,GAAW,EAAE;IAExB,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,gBAAgB,GAAW,EAAE;IAE7B,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,eAAe,GAAW,EAAE;IAC5B,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,YAAY,GAAW,EAAE;IAGvBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACX,WAAW,GAAG,IAAI,CAACY,QAAQ,EAAE;IAElC,IAAI,CAACX,aAAa,GAAG,IAAI,CAACJ,QAAQ,IAAI,IAAI,CAACC,QAAQ,GAAG,eAAe,GAAG,EAAE;IAC1E,IAAI,CAACI,gBAAgB,GAAG,IAAI,CAACL,QAAQ,IAAI,CAAC,IAAI,CAACC,QAAQ,GAAG,oCAAoC,GAAG,EAAE;IAEnG,IAAI,CAACK,UAAU,GAAGV,SAAS,CAACoB,aAAa,CAAC,IAAI,CAACjB,KAAK,CAAC;IACrD,IAAI,CAACQ,SAAS,GAAGX,SAAS,CAACqB,QAAQ,CAAC,IAAI,CAAClB,KAAK,CAAC;IAC/C,IAAI,CAACS,UAAU,GAAG,IAAI,CAACD,SAAS,GAAG,IAAI,CAACD,UAAU;IAClD,IAAI,CAACG,eAAe,GAAG,IAAI,CAACP,MAAM,GAAG,cAAc,GAAG,EAAE;IACxD,IAAI,CAACQ,WAAW,GAAG,YAAY,GAAG,IAAI,CAACN,aAAa,GAAG,IAAI,CAACK,eAAe,GAAG,IAAI,CAACJ,gBAAgB;IACnG,IAAI,CAACM,YAAY,GAAG,aAAa,GAAG,IAAI,CAACR,WAAW;EACtD;EAEAY,QAAQA,CAAA;IAEN,MAAMG,OAAO,GAA0B;MACrC,GAAG,EAAE,YAAY;MACjB,GAAG,EAAE,UAAU;MACf,GAAG,EAAE,YAAY;MACjB,GAAG,EAAE;KACN;IACD,IAAIC,IAAI,GAAGvB,SAAS,CAACwB,OAAO,CAAC,IAAI,CAACrB,KAAK,CAAC;IAExC,OAAOmB,OAAO,CAACC,IAAI,CAAC;EACtB;EAAC,QAAAE,CAAA,G;qBAvDUxB,aAAa;EAAA;EAAA,QAAAyB,EAAA,G;UAAbzB,aAAa;IAAA0B,SAAA;IAAAC,MAAA;MAAAzB,KAAA;MAAAC,QAAA;MAAAC,QAAA;MAAAC,MAAA;IAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1BE,EAAA,CAAAC,cAAA,aAA6B;QAEzBD,EAAA,CAAAE,MAAA,GACF;QAAAF,EAAA,CAAAG,YAAA,EAAM;;;QAHHH,EAAA,CAAAI,UAAA,YAAAL,GAAA,CAAArB,WAAA,CAAuB;QACrBsB,EAAA,CAAAK,SAAA,GAAwB;QAAxBL,EAAA,CAAAI,UAAA,YAAAL,GAAA,CAAApB,YAAA,CAAwB;QAC3BqB,EAAA,CAAAK,SAAA,GACF;QADEL,EAAA,CAAAM,kBAAA,MAAAP,GAAA,CAAAvB,UAAA,MACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}