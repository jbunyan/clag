{"ast":null,"code":"import { PlayerModel } from '../player/player-model';\nimport { CardUtils } from '../cards/card-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../connection.service\";\nfunction GameboardComponent_div_0_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", name_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r3);\n  }\n}\nfunction GameboardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2, \" Register: \");\n    i0.ɵɵelementStart(3, \"select\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function GameboardComponent_div_0_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.myName = $event);\n    })(\"change\", function GameboardComponent_div_0_Template_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.playerSelected());\n    });\n    i0.ɵɵtemplate(4, GameboardComponent_div_0_option_4_Template, 2, 2, \"option\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.myName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.names);\n  }\n}\nfunction GameboardComponent_div_1_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Connection: Up\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameboardComponent_div_1_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Connection: Down\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameboardComponent_div_1_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"component-card\", 23);\n    i0.ɵɵlistener(\"click\", function GameboardComponent_div_1_ng_template_11_Template_component_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const card_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.cardSelected(card_r14));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const card_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", card_r14)(\"hidden\", false)(\"selected\", false)(\"playable\", true);\n  }\n}\nfunction GameboardComponent_div_1_div_12_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", p_r18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(p_r18);\n  }\n}\nfunction GameboardComponent_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"p\");\n    i0.ɵɵtext(2, \"Make prediction!...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function GameboardComponent_div_1_div_12_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.myPrediction = $event);\n    })(\"change\", function GameboardComponent_div_1_div_12_Template_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.predictionSelected());\n    });\n    i0.ɵɵelementStart(4, \"optgroup\");\n    i0.ɵɵtemplate(5, GameboardComponent_div_1_div_12_option_5_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r10.myPrediction);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.predictionRange);\n  }\n}\nfunction GameboardComponent_div_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\");\n    i0.ɵɵtext(2, \"Trumps\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r11.trumpsStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.trumps);\n  }\n}\nfunction GameboardComponent_div_1_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"component-card\", 29);\n  }\n  if (rf & 2) {\n    const card_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r12.trickCardClass[i_r23])(\"value\", card_r22)(\"hidden\", false)(\"selected\", false)(\"playable\", true);\n  }\n}\nfunction GameboardComponent_div_1_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"component-player\", 30);\n  }\n  if (rf & 2) {\n    const player_r24 = ctx.$implicit;\n    const i_r25 = ctx.index;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"player-container player-\", i_r25, \"\");\n    i0.ɵɵproperty(\"roundState\", ctx_r13.roundState)(\"player\", player_r24);\n  }\n}\nfunction GameboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtext(2, \"Clag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 10);\n    i0.ɵɵtemplate(5, GameboardComponent_div_1_p_5_Template, 2, 0, \"p\", 11);\n    i0.ɵɵtemplate(6, GameboardComponent_div_1_p_6_Template, 2, 0, \"p\", 11);\n    i0.ɵɵelementStart(7, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function GameboardComponent_div_1_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.newGame());\n    });\n    i0.ɵɵtext(8, \"New Game\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 13)(10, \"div\");\n    i0.ɵɵtemplate(11, GameboardComponent_div_1_ng_template_11_Template, 1, 4, \"ng-template\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, GameboardComponent_div_1_div_12_Template, 6, 2, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, GameboardComponent_div_1_div_13_Template, 5, 2, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 17)(15, \"div\", 18)(16, \"div\", 19);\n    i0.ɵɵtemplate(17, GameboardComponent_div_1_ng_template_17_Template, 1, 5, \"ng-template\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 20);\n    i0.ɵɵtemplate(19, GameboardComponent_div_1_ng_template_19_Template, 1, 5, \"ng-template\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 21);\n    i0.ɵɵelement(21, \"component-scoreboard\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.connection.isConnected());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.connection.isConnected());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.playCardRequested ? \"my-hand-my-go\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.myHand);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.predictionRequested);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.myHand && ctx_r1.myHand.length > 0);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentTrick);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.players);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scoreboard\", ctx_r1.scoreboard);\n  }\n}\nexport var RoundState;\n(function (RoundState) {\n  RoundState[RoundState[\"INIT\"] = 0] = \"INIT\";\n  RoundState[RoundState[\"PREDICTIONS\"] = 1] = \"PREDICTIONS\";\n  RoundState[RoundState[\"PREDICTIONS_COMPLETE\"] = 2] = \"PREDICTIONS_COMPLETE\";\n  RoundState[RoundState[\"IN_PROGRESS\"] = 3] = \"IN_PROGRESS\";\n  RoundState[RoundState[\"COMPLETE\"] = 4] = \"COMPLETE\";\n})(RoundState || (RoundState = {}));\nexport class GameboardComponent {\n  constructor(connection) {\n    this.connection = connection;\n    this.names = ['John', 'Eric', 'Nancy', 'Allen', 'Gavin'];\n    this.myHand = [];\n    this.myName = \"XXX\";\n    this.predictions = [];\n    this.trick = 0;\n    this.currentTrick = [];\n    this.scoreboard = {\n      players: [],\n      scores: [],\n      hidden: true\n    };\n    this.roundState = RoundState.INIT;\n    this.predictionRequested = false;\n    this.predictionRange = [];\n    this.myPrediction = -1;\n    this.playCardRequested = false;\n    this.trumps = \"\";\n    this.trumpsColour = \"\";\n    this.trumpsStyle = {\n      color: \"\"\n    };\n    this.trickCardClass = [];\n    this.players = [];\n    console.log(\"gameboard constructor\");\n    this.connection.getMessageBehaviourSubject().subscribe({\n      next: message => {\n        switch (message.messageType) {\n          case \"hand\":\n            {\n              this.roundState = RoundState.PREDICTIONS;\n              this.myHand = message.data.hand;\n              CardUtils.sortHand(this.myHand);\n              this.players.forEach(p => {\n                p.clearDealer();\n                p.setTricksWon(0);\n                p.setCurrentPrediction(-1);\n              });\n              this.players[message.data.dealer].setDealer();\n              this.trumps = CardUtils.getSuitSymbol(message.data.trumps);\n              this.trumpsStyle = {\n                color: CardUtils.getSuitColour(message.data.trumps)\n              };\n              break;\n            }\n          case \"predictionRequest\":\n            {\n              this.myPrediction = -1;\n              this.predictionRange = [];\n              for (let i = 0; i <= this.myHand.length; i++) {\n                this.predictionRange.push(i);\n              }\n              this.predictionRequested = true;\n              break;\n            }\n          case \"predictions\":\n            {\n              this.players[message.data.prediction.playerId].setCurrentPrediction(message.data.prediction.prediction);\n              let predictionsComplete = true;\n              this.players.forEach(p => {\n                if (predictionsComplete && p.getCurrentPrediction() === -1) {\n                  predictionsComplete = false;\n                }\n              });\n              if (predictionsComplete) this.roundState = RoundState.PREDICTIONS_COMPLETE;\n              break;\n            }\n          case \"playCard\":\n            {\n              this.playCardRequested = true;\n              break;\n            }\n          case \"cardPlayed\":\n            {\n              this.roundState = RoundState.IN_PROGRESS;\n              this.currentTrick.push(message.data.card);\n              let i = this.trickCardClass.push([`player-${message.data.playerId}-card`]) - 1;\n              setTimeout(() => {\n                this.trickCardClass[i] = [\"current-trick-card\"];\n              }, 100);\n              break;\n            }\n          case \"trickResult\":\n            {\n              setTimeout(() => {\n                this.currentTrick = [];\n                this.trickCardClass = [];\n              }, 5000);\n              let t = this.players[message.data.trickResult.winningPlayer].getTricksWon();\n              this.players[message.data.trickResult.winningPlayer].setTricksWon(t + 1);\n              break;\n            }\n          case \"players\":\n            {\n              this.updatePlayers(message);\n              break;\n            }\n          case \"scoreboard\":\n            {\n              this.roundState = RoundState.COMPLETE;\n              this.scoreboard.players = this.players;\n              this.scoreboard.scores = message.data.scoreboard;\n              this.scoreboard.hidden = true; // LEAVE HIDDEN FOR NOW....\n              let lastRound = message.data.scoreboard.pop();\n              lastRound.forEach((se, index) => {\n                this.players[index].setCurrentScore(se.score);\n              });\n              break;\n            }\n          default:\n            {\n              console.log(\"dashboard: ignoring message\");\n            }\n        }\n      }\n    });\n  }\n  updatePlayers(message) {\n    this.players = message.data.players.map(p => {\n      let player = new PlayerModel();\n      player.setName(p);\n      return player;\n    });\n  }\n  playerSelected() {\n    this.connection.setMyName(this.myName);\n    this.connection.send(\"register\", {\n      \"name\": this.myName\n    });\n  }\n  predictionSelected() {\n    this.connection.send(\"prediction\", {\n      \"prediction\": this.myPrediction\n    });\n    this.predictionRequested = false;\n  }\n  cardSelected(card) {\n    if (this.playCardRequested) {\n      // check for need to follow suit.....\n      if (this.currentTrick.length > 0) {\n        let leadSuit = CardUtils.getSuit(this.currentTrick[0]);\n        if (leadSuit !== CardUtils.getSuit(card)) {\n          // not following suit.... does the player have any of the suit to play?\n          let hasSuit = false;\n          for (let i = 0; i < this.myHand.length; i++) {\n            if (CardUtils.getSuit(this.myHand[i]) === leadSuit) {\n              hasSuit = true;\n              break;\n            }\n          }\n          if (hasSuit) {\n            alert(\"You must follow suit if you can!\");\n            return;\n          }\n        }\n      }\n      this.connection.send(\"card\", {\n        \"card\": card\n      });\n      this.playCardRequested = false;\n      let index = this.myHand.findIndex(c => c === card);\n      this.myHand.splice(index, 1);\n    }\n  }\n  newGame() {\n    console.log(\"New game\");\n    this.connection.send(\"newGame\");\n  }\n  static #_ = this.ɵfac = function GameboardComponent_Factory(t) {\n    return new (t || GameboardComponent)(i0.ɵɵdirectiveInject(i1.ConnectionService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"registration\", 4, \"ngIf\"], [\"class\", \"main-container\", 4, \"ngIf\"], [1, \"registration\"], [1, \"player-selection\"], [1, \"my-prediction-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"], [1, \"main-container\"], [1, \"title\"], [1, \"lhs-panel\"], [1, \"connection-status\"], [4, \"ngIf\"], [3, \"click\"], [1, \"my-hand\", 3, \"ngClass\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"my-prediction\", 4, \"ngIf\"], [\"class\", \"trumps\", 4, \"ngIf\"], [1, \"game-board\"], [1, \"playing-area\"], [1, \"current-trick-container\"], [1, \"players\"], [1, \"scoreboard\"], [3, \"scoreboard\"], [1, \"myhand-card\", 3, \"value\", \"hidden\", \"selected\", \"playable\", \"click\"], [1, \"my-prediction\"], [\"class\", \"prediction-option\", 3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"prediction-option\", 3, \"ngValue\"], [1, \"trumps\"], [1, \"trump-style\", 3, \"ngStyle\"], [3, \"ngClass\", \"value\", \"hidden\", \"selected\", \"playable\"], [3, \"roundState\", \"player\"]],\n    template: function GameboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GameboardComponent_div_0_Template, 5, 2, \"div\", 0);\n        i0.ɵɵtemplate(1, GameboardComponent_div_1_Template, 22, 9, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.myName === \"XXX\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.myName !== \"XXX\");\n      }\n    },\n    styles: [\".main-container[_ngcontent-%COMP%] {\\n  --card-height: 20vh;\\n  --card-width: 7vw; \\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: green;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.registration[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background-image: url('card-games.png');\\n  background-position: bottom;\\n  background-size: 80%;\\n  background-repeat: no-repeat;\\n  margin: 0;\\n  padding: 0;  \\n}\\n\\n.player-selection[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10%;\\n  left: 50%;\\n  font-size: 7vh;\\n  transform: translate(-50%,-50%);\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  color: white;\\n  position: absolute;\\n  top: 20px;\\n  left: 20px;\\n  font-size: 8vh;\\n  height: 15vh;\\n}\\n\\n.connection-status[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 4vh;\\n  left: 0;\\n  border: 2px solid lightgrey;\\n  border-radius: 2vh;\\n  width: 100%;\\n  height: 5vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n}\\n\\n.lhs-panel[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10vh;\\n  left: 10px;\\n  height: 87vh;\\n  width: 25vw;\\n}\\n\\n.game-board[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 3vh;\\n  left: 25vw;\\n  width: 75vw;\\n  height: var(--game-board-height);\\n}\\n\\n.trumps[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 78vh;\\n  left: 2vw;\\n  margin-right: 2vw;\\n  height: 3vh;\\n  width: 40%;\\n  color: white;\\n  border-radius: 1vh;\\n  padding: 1vw 1vh 1vw 1vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  font-size: 3vh;\\n}\\n\\n.trump-style[_ngcontent-%COMP%] {\\n  font-size: 8vh;\\n}\\n\\n.player-container[_ngcontent-%COMP%] {\\n  --player-height: calc(var(--playing-area-height)/5);\\n  height: var(--player-height);\\n  width: 25%;\\n  transform: translate(-50%,-50%);\\n}\\n\\n.player-0[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10%;\\n  left: 50%;\\n}\\n\\n.player-1[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 85%;\\n}\\n\\n.player-2[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 90%;\\n  left: 50%;\\n}\\n\\n.player-3[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 15%;\\n}\\n\\n.player-0-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10%;\\n  left: 50%;\\n  scale: 10%;\\n  transform: (translate(-50%,-50%));\\n}\\n\\n.player-1-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 85%;\\n  scale: 10%;\\n  transform: (translate(-50%,-50%));\\n}\\n\\n.player-2-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 90%;\\n  left: 50%;\\n  scale: 10%;\\n  transform: (translate(-50%,-50%));\\n}\\n\\n.player-3-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 15%;\\n  scale: 10%;\\n  transform: (translate(-50%,-50%));\\n}\\n\\n.scores[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n\\n.playing-area[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: var(--playing-area-height);\\n  width: 100%;\\n}\\n\\n.my-hand[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15vh;\\n  left: 0;\\n  height: 60vh;\\n  width: 100%;\\n  padding-left: 3vw;\\n  box-sizing: border-box;\\n  border: 2px solid lightgrey;\\n  border-radius: 2vh;\\n}\\n\\n.my-hand-my-go[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.myhand-card[_ngcontent-%COMP%] {\\n  --card-width-offset: 0.3;\\n  --card-height-offset: 0.2;\\n  position: absolute;\\n}\\n\\n.myhand-card[_ngcontent-%COMP%]:nth-child(1) {\\n  left: 1vw;\\n  top: 1vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(2) {\\n  left: 3.5vw;\\n  top: 5vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(3) {\\n  left: 6vw;\\n  top: 9vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(4) {\\n  left: 8.5vw;\\n  top: 13vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(5) {\\n  left: 11vw;\\n  top: 17vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(6) {\\n  left: 13.5vw;\\n  top: 21vh;\\n}\\n.myhand-card[_ngcontent-%COMP%]:nth-child(7) {\\n  left: 16vw;\\n  top: 25vh;\\n}\\n\\n.play-card[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 150px;\\n}\\n\\n.current-trick-container[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: var(--playing-area-height);\\n}\\n\\n.current-trick-card[_ngcontent-%COMP%] {\\n  --card-width-offset: 0.3;\\n  --card-height-offset: 0.2;\\n  scale: 100%;\\n  position: absolute;\\n  transition: all 1s ease;\\n  transition-property: top, left, scale;\\n}\\n\\n.current-trick-card[_ngcontent-%COMP%]:nth-child(1) {\\n  left: 35%;\\n  top: 35%;  \\n}\\n.current-trick-card[_ngcontent-%COMP%]:nth-child(2) {\\n  left: 40%;\\n  top: 40%;\\n}\\n.current-trick-card[_ngcontent-%COMP%]:nth-child(3) {\\n  left: 45%;\\n  top: 45%;\\n}\\n.current-trick-card[_ngcontent-%COMP%]:nth-child(4) {\\n  left: 50%;\\n  top: 50%;\\n}\\n\\n.current-trick[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: calc((var(--playing-area-height))/2);\\n  left: 50%;\\n  height: 20vh;\\n  width: 20vw;\\n  transform: translate(-50%,-50%);\\n}\\n\\n.my-prediction[_ngcontent-%COMP%] {\\n  position: absolute;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n  bottom: 1vh;\\n  left: 2%;\\n  width: 96%;\\n  border-radius: 2vh;\\n  background-color: beige;\\n  color: black;\\n  font-size: 3vh;\\n}\\n\\n.my-prediction-select[_ngcontent-%COMP%] {\\n  height:8vh;\\n  width:5vw; \\n  vertical-align: middle;\\n  font-size: 7vh;\\n}\\n\\noptgroup[_ngcontent-%COMP%] {\\n  font-size: 40px;\\n}\\n\\n.test-before[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 20%;\\n  left: 20%;\\n}\\n\\n.test-after[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transition: top 5s, left 5s;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZWJvYXJkL2dhbWVib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixPQUFPO0VBQ1AsWUFBWTtFQUNaLGFBQWE7RUFDYix1Q0FBb0Q7RUFDcEQsMkJBQTJCO0VBQzNCLG9CQUFvQjtFQUNwQiw0QkFBNEI7RUFDNUIsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULGNBQWM7RUFDZCwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsY0FBYztFQUNkLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsT0FBTztFQUNQLDJCQUEyQjtFQUMzQixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFdBQVc7RUFDWCxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVUFBVTtFQUNWLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFVBQVU7RUFDVixXQUFXO0VBQ1gsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxTQUFTO0VBQ1QsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxVQUFVO0VBQ1YsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEI7RUFDOUIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxtREFBbUQ7RUFDbkQsNEJBQTRCO0VBQzVCLFVBQVU7RUFDViwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULFVBQVU7RUFDVixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxVQUFVO0VBQ1YsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixTQUFTO0VBQ1QsVUFBVTtFQUNWLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULFVBQVU7RUFDVixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxrQ0FBa0M7RUFDbEMsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxPQUFPO0VBQ1AsWUFBWTtFQUNaLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLDJCQUEyQjtFQUMzQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIseUJBQXlCO0VBQ3pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxRQUFRO0FBQ1Y7QUFDQTtFQUNFLFdBQVc7RUFDWCxRQUFRO0FBQ1Y7QUFDQTtFQUNFLFNBQVM7RUFDVCxRQUFRO0FBQ1Y7QUFDQTtFQUNFLFdBQVc7RUFDWCxTQUFTO0FBQ1g7QUFDQTtFQUNFLFVBQVU7RUFDVixTQUFTO0FBQ1g7QUFDQTtFQUNFLFlBQVk7RUFDWixTQUFTO0FBQ1g7QUFDQTtFQUNFLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixPQUFPO0VBQ1AsV0FBVztFQUNYLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4Qix5QkFBeUI7RUFDekIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsU0FBUztFQUNULFFBQVE7QUFDVjtBQUNBO0VBQ0UsU0FBUztFQUNULFFBQVE7QUFDVjtBQUNBO0VBQ0UsU0FBUztFQUNULFFBQVE7QUFDVjtBQUNBO0VBQ0UsU0FBUztFQUNULFFBQVE7QUFDVjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsU0FBUztFQUNULFlBQVk7RUFDWixXQUFXO0VBQ1gsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYiw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxRQUFRO0VBQ1IsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtFQUN0QixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixTQUFTO0VBQ1QsMkJBQTJCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4tY29udGFpbmVyIHtcbiAgLS1jYXJkLWhlaWdodDogMjB2aDtcbiAgLS1jYXJkLXdpZHRoOiA3dnc7IFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4ucmVnaXN0cmF0aW9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvY2FyZC1nYW1lcy5wbmcnKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogYm90dG9tO1xuICBiYWNrZ3JvdW5kLXNpemU6IDgwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyAgXG59XG5cbi5wbGF5ZXItc2VsZWN0aW9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwJTtcbiAgbGVmdDogNTAlO1xuICBmb250LXNpemU6IDd2aDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbn1cblxuLnRpdGxlIHtcbiAgY29sb3I6IHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMjBweDtcbiAgZm9udC1zaXplOiA4dmg7XG4gIGhlaWdodDogMTV2aDtcbn1cblxuLmNvbm5lY3Rpb24tc3RhdHVzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDR2aDtcbiAgbGVmdDogMDtcbiAgYm9yZGVyOiAycHggc29saWQgbGlnaHRncmV5O1xuICBib3JkZXItcmFkaXVzOiAydmg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDV2aDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5saHMtcGFuZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTB2aDtcbiAgbGVmdDogMTBweDtcbiAgaGVpZ2h0OiA4N3ZoO1xuICB3aWR0aDogMjV2dztcbn1cblxuLmdhbWUtYm9hcmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3ZoO1xuICBsZWZ0OiAyNXZ3O1xuICB3aWR0aDogNzV2dztcbiAgaGVpZ2h0OiB2YXIoLS1nYW1lLWJvYXJkLWhlaWdodCk7XG59XG5cbi50cnVtcHMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNzh2aDtcbiAgbGVmdDogMnZ3O1xuICBtYXJnaW4tcmlnaHQ6IDJ2dztcbiAgaGVpZ2h0OiAzdmg7XG4gIHdpZHRoOiA0MCU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMXZoO1xuICBwYWRkaW5nOiAxdncgMXZoIDF2dyAxdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZm9udC1zaXplOiAzdmg7XG59XG5cbi50cnVtcC1zdHlsZSB7XG4gIGZvbnQtc2l6ZTogOHZoO1xufVxuXG4ucGxheWVyLWNvbnRhaW5lciB7XG4gIC0tcGxheWVyLWhlaWdodDogY2FsYyh2YXIoLS1wbGF5aW5nLWFyZWEtaGVpZ2h0KS81KTtcbiAgaGVpZ2h0OiB2YXIoLS1wbGF5ZXItaGVpZ2h0KTtcbiAgd2lkdGg6IDI1JTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbn1cblxuLnBsYXllci0wIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwJTtcbiAgbGVmdDogNTAlO1xufVxuXG4ucGxheWVyLTEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA4NSU7XG59XG5cbi5wbGF5ZXItMiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA5MCU7XG4gIGxlZnQ6IDUwJTtcbn1cblxuLnBsYXllci0zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogMTUlO1xufVxuXG4ucGxheWVyLTAtY2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMCU7XG4gIGxlZnQ6IDUwJTtcbiAgc2NhbGU6IDEwJTtcbiAgdHJhbnNmb3JtOiAodHJhbnNsYXRlKC01MCUsLTUwJSkpO1xufVxuXG4ucGxheWVyLTEtY2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDg1JTtcbiAgc2NhbGU6IDEwJTtcbiAgdHJhbnNmb3JtOiAodHJhbnNsYXRlKC01MCUsLTUwJSkpO1xufVxuXG4ucGxheWVyLTItY2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA5MCU7XG4gIGxlZnQ6IDUwJTtcbiAgc2NhbGU6IDEwJTtcbiAgdHJhbnNmb3JtOiAodHJhbnNsYXRlKC01MCUsLTUwJSkpO1xufVxuXG4ucGxheWVyLTMtY2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDE1JTtcbiAgc2NhbGU6IDEwJTtcbiAgdHJhbnNmb3JtOiAodHJhbnNsYXRlKC01MCUsLTUwJSkpO1xufVxuXG4uc2NvcmVzIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ucGxheWluZy1hcmVhIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGhlaWdodDogdmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCk7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubXktaGFuZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxNXZoO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDYwdmg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDN2dztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyOiAycHggc29saWQgbGlnaHRncmV5O1xuICBib3JkZXItcmFkaXVzOiAydmg7XG59XG5cbi5teS1oYW5kLW15LWdvIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4ubXloYW5kLWNhcmQge1xuICAtLWNhcmQtd2lkdGgtb2Zmc2V0OiAwLjM7XG4gIC0tY2FyZC1oZWlnaHQtb2Zmc2V0OiAwLjI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLm15aGFuZC1jYXJkOm50aC1jaGlsZCgxKSB7XG4gIGxlZnQ6IDF2dztcbiAgdG9wOiAxdmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDIpIHtcbiAgbGVmdDogMy41dnc7XG4gIHRvcDogNXZoO1xufVxuLm15aGFuZC1jYXJkOm50aC1jaGlsZCgzKSB7XG4gIGxlZnQ6IDZ2dztcbiAgdG9wOiA5dmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDQpIHtcbiAgbGVmdDogOC41dnc7XG4gIHRvcDogMTN2aDtcbn1cbi5teWhhbmQtY2FyZDpudGgtY2hpbGQoNSkge1xuICBsZWZ0OiAxMXZ3O1xuICB0b3A6IDE3dmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDYpIHtcbiAgbGVmdDogMTMuNXZ3O1xuICB0b3A6IDIxdmg7XG59XG4ubXloYW5kLWNhcmQ6bnRoLWNoaWxkKDcpIHtcbiAgbGVmdDogMTZ2dztcbiAgdG9wOiAyNXZoO1xufVxuXG4ucGxheS1jYXJkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDE1MHB4O1xufVxuXG4uY3VycmVudC10cmljay1jb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogdmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCk7XG59XG5cbi5jdXJyZW50LXRyaWNrLWNhcmQge1xuICAtLWNhcmQtd2lkdGgtb2Zmc2V0OiAwLjM7XG4gIC0tY2FyZC1oZWlnaHQtb2Zmc2V0OiAwLjI7XG4gIHNjYWxlOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zaXRpb246IGFsbCAxcyBlYXNlO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0b3AsIGxlZnQsIHNjYWxlO1xufVxuXG4uY3VycmVudC10cmljay1jYXJkOm50aC1jaGlsZCgxKSB7XG4gIGxlZnQ6IDM1JTtcbiAgdG9wOiAzNSU7ICBcbn1cbi5jdXJyZW50LXRyaWNrLWNhcmQ6bnRoLWNoaWxkKDIpIHtcbiAgbGVmdDogNDAlO1xuICB0b3A6IDQwJTtcbn1cbi5jdXJyZW50LXRyaWNrLWNhcmQ6bnRoLWNoaWxkKDMpIHtcbiAgbGVmdDogNDUlO1xuICB0b3A6IDQ1JTtcbn1cbi5jdXJyZW50LXRyaWNrLWNhcmQ6bnRoLWNoaWxkKDQpIHtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbn1cblxuLmN1cnJlbnQtdHJpY2sge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygodmFyKC0tcGxheWluZy1hcmVhLWhlaWdodCkpLzIpO1xuICBsZWZ0OiA1MCU7XG4gIGhlaWdodDogMjB2aDtcbiAgd2lkdGg6IDIwdnc7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XG59XG5cbi5teS1wcmVkaWN0aW9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm90dG9tOiAxdmg7XG4gIGxlZnQ6IDIlO1xuICB3aWR0aDogOTYlO1xuICBib3JkZXItcmFkaXVzOiAydmg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJlaWdlO1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogM3ZoO1xufVxuXG4ubXktcHJlZGljdGlvbi1zZWxlY3Qge1xuICBoZWlnaHQ6OHZoO1xuICB3aWR0aDo1dnc7IFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBmb250LXNpemU6IDd2aDtcbn1cblxub3B0Z3JvdXAge1xuICBmb250LXNpemU6IDQwcHg7XG59XG5cbi50ZXN0LWJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMCU7XG4gIGxlZnQ6IDIwJTtcbn1cblxuLnRlc3QtYWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zaXRpb246IHRvcCA1cywgbGVmdCA1cztcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["PlayerModel","CardUtils","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","name_r3","ɵɵadvance","ɵɵtextInterpolate","ɵɵlistener","GameboardComponent_div_0_Template_select_ngModelChange_3_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","myName","GameboardComponent_div_0_Template_select_change_3_listener","ctx_r6","playerSelected","ɵɵtemplate","GameboardComponent_div_0_option_4_Template","ctx_r0","names","GameboardComponent_div_1_ng_template_11_Template_component_card_click_0_listener","restoredCtx","_r16","card_r14","$implicit","ctx_r15","cardSelected","p_r18","GameboardComponent_div_1_div_12_Template_select_ngModelChange_3_listener","_r20","ctx_r19","myPrediction","GameboardComponent_div_1_div_12_Template_select_change_3_listener","ctx_r21","predictionSelected","GameboardComponent_div_1_div_12_option_5_Template","ctx_r10","predictionRange","ctx_r11","trumpsStyle","trumps","ɵɵelement","ctx_r12","trickCardClass","i_r23","card_r22","ɵɵclassMapInterpolate1","i_r25","ctx_r13","roundState","player_r24","GameboardComponent_div_1_p_5_Template","GameboardComponent_div_1_p_6_Template","GameboardComponent_div_1_Template_button_click_7_listener","_r27","ctx_r26","newGame","GameboardComponent_div_1_ng_template_11_Template","GameboardComponent_div_1_div_12_Template","GameboardComponent_div_1_div_13_Template","GameboardComponent_div_1_ng_template_17_Template","GameboardComponent_div_1_ng_template_19_Template","ctx_r1","connection","isConnected","playCardRequested","myHand","predictionRequested","length","currentTrick","players","scoreboard","RoundState","GameboardComponent","constructor","predictions","trick","scores","hidden","INIT","trumpsColour","color","console","log","getMessageBehaviourSubject","subscribe","next","message","messageType","PREDICTIONS","data","hand","sortHand","forEach","p","clearDealer","setTricksWon","setCurrentPrediction","dealer","setDealer","getSuitSymbol","getSuitColour","i","push","prediction","playerId","predictionsComplete","getCurrentPrediction","PREDICTIONS_COMPLETE","IN_PROGRESS","card","setTimeout","t","trickResult","winningPlayer","getTricksWon","updatePlayers","COMPLETE","lastRound","pop","se","index","setCurrentScore","score","map","player","setName","setMyName","send","leadSuit","getSuit","hasSuit","alert","findIndex","c","splice","_","ɵɵdirectiveInject","i1","ConnectionService","_2","selectors","decls","vars","consts","template","GameboardComponent_Template","rf","ctx","GameboardComponent_div_0_Template","GameboardComponent_div_1_Template"],"sources":["/Users/john/Projects/Clag/ClagClient2/src/app/gameboard/gameboard.component.ts","/Users/john/Projects/Clag/ClagClient2/src/app/gameboard/gameboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConnectionService, Message } from '../connection.service';\nimport { PlayerModel } from '../player/player-model';\nimport { Scoreboard, ScoreboardEntry } from '../scoreboard/scoreboard.component';\nimport { CardUtils } from '../cards/card-utils';\n\nexport enum RoundState {\n  INIT,\n  PREDICTIONS,\n  PREDICTIONS_COMPLETE,\n  IN_PROGRESS,\n  COMPLETE\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './gameboard.component.html',\n  styleUrls: [ './gameboard.component.css' ]\n})\nexport class GameboardComponent {\n\n  names: string[] = ['John','Eric','Nancy','Allen','Gavin']\n  myHand: string[] = []\n  myName: string = \"XXX\"\n  predictions: number[] = []\n  trick: number = 0\n  currentTrick: string[] = []\n  scoreboard: Scoreboard = {\n    players: [],\n    scores: [],\n    hidden: true\n  };\n  roundState: RoundState = RoundState.INIT\n  predictionRequested: boolean = false\n  predictionRange: number[] = []\n  myPrediction: number = -1\n  playCardRequested: boolean = false\n  trumps: string = \"\"\n  trumpsColour: string = \"\"\n  trumpsStyle: {color: string} = {color: \"\"}\n  trickCardClass: string[][] = []\n\n  players: PlayerModel[] = []\n\n  constructor(\n    public connection: ConnectionService\n  ) {\n    console.log(\"gameboard constructor\")\n\n    this.connection.getMessageBehaviourSubject().subscribe({\n      next: (message:Message) => {\n        switch(message.messageType) { \n          case \"hand\": {\n            this.roundState = RoundState.PREDICTIONS\n            this.myHand = message.data.hand\n            CardUtils.sortHand(this.myHand)\n            this.players.forEach(p => {\n              p.clearDealer()\n              p.setTricksWon(0)\n              p.setCurrentPrediction(-1)\n            })\n            this.players[message.data.dealer].setDealer()\n            this.trumps = CardUtils.getSuitSymbol(message.data.trumps)\n            this.trumpsStyle = {color: CardUtils.getSuitColour(message.data.trumps)}\n            break\n          }\n          case \"predictionRequest\": {\n            this.myPrediction = -1\n            this.predictionRange = []\n            for (let i = 0; i <= this.myHand.length ; i++) {\n              this.predictionRange.push(i);\n           }\n            this.predictionRequested = true\n            break\n          }\n          case \"predictions\": {\n            this.players[message.data.prediction.playerId].setCurrentPrediction(message.data.prediction.prediction)\n            let predictionsComplete: boolean = true\n            this.players.forEach( p => {\n              if (predictionsComplete && (p.getCurrentPrediction() === -1)) {\n                predictionsComplete = false\n              }\n            })\n            if (predictionsComplete) this.roundState = RoundState.PREDICTIONS_COMPLETE\n            break\n          }\n          case \"playCard\": {\n            this.playCardRequested = true\n            break\n          }\n          case \"cardPlayed\": {\n            this.roundState = RoundState.IN_PROGRESS\n            this.currentTrick.push(message.data.card)\n            let i = this.trickCardClass.push([`player-${message.data.playerId}-card`]) - 1\n            setTimeout( () => {\n              this.trickCardClass[i]=[\"current-trick-card\"]\n            },100)\n            break\n          }\n          case \"trickResult\": {\n            setTimeout( () => {\n              this.currentTrick = []\n              this.trickCardClass = []\n            }, 5000)\n            let t = this.players[message.data.trickResult.winningPlayer].getTricksWon()\n            this.players[message.data.trickResult.winningPlayer].setTricksWon(t + 1)\n            break\n          }\n          case \"players\": {\n            this.updatePlayers(message)\n            break\n          }\n          case \"scoreboard\": {\n            this.roundState = RoundState.COMPLETE\n            this.scoreboard.players = this.players\n            this.scoreboard.scores = message.data.scoreboard\n            this.scoreboard.hidden = true // LEAVE HIDDEN FOR NOW....\n\n            let lastRound: ScoreboardEntry[] = message.data.scoreboard.pop()\n\n            lastRound.forEach( (se: ScoreboardEntry, index: number) => {\n              this.players[index].setCurrentScore(se.score)\n            })\n            break\n          }\n          default: {\n            console.log(\"dashboard: ignoring message\")\n          }\n        }\n      }\n    })\n  }\n\n  updatePlayers(message: Message) {\n    this.players = message.data.players.map(\n      (p: string) => {\n        let player = new PlayerModel()\n        player.setName(p)\n        return player\n      }\n    )\n  }\n\n  playerSelected() {\n    this.connection.setMyName(this.myName)\n    this.connection.send(\"register\",{\"name\":this.myName});\n  }\n\n  predictionSelected() {\n    this.connection.send(\"prediction\",{\"prediction\":this.myPrediction});\n    this.predictionRequested = false\n  }\n\n  cardSelected(card: string) {\n    if (this.playCardRequested) {\n      // check for need to follow suit.....\n      if (this.currentTrick.length > 0) {\n        let leadSuit = CardUtils.getSuit(this.currentTrick[0])\n        if (leadSuit !== CardUtils.getSuit(card)) {\n          // not following suit.... does the player have any of the suit to play?\n          let hasSuit: boolean = false\n          for (let i=0; i<this.myHand.length; i++) {\n            if (CardUtils.getSuit(this.myHand[i]) === leadSuit) {\n              hasSuit = true\n              break\n            }\n          }\n          if (hasSuit) {\n            alert(\"You must follow suit if you can!\")\n            return\n          }\n        }\n      }\n      this.connection.send(\"card\",{\"card\":card});\n      this.playCardRequested = false\n      let index = this.myHand.findIndex(c => c === card)\n      this.myHand.splice(index,1)\n    }\n  }\n\n  newGame() {\n    console.log(\"New game\")\n    this.connection.send(\"newGame\")\n  }\n}\n","\n<div class=\"registration\" *ngIf=\"myName === 'XXX'\">\n  \n  <div class=\"player-selection\">\n    Register:\n    <select [(ngModel)]=\"myName\" class=\"my-prediction-select\" (change)=\"playerSelected()\">\n      <option *ngFor=\"let name of names\" [ngValue]=\"name\">{{name}}</option>\n    </select>\n  </div>\n\n</div>\n\n\n<div class=\"main-container\" *ngIf=\"myName !== 'XXX'\">\n\n  <div class=\"title\">Clag</div>\n\n  <div class=\"lhs-panel\">\n\n    <div class=\"connection-status\">\n      <p *ngIf=\"connection.isConnected()\">Connection: Up</p>\n      <p *ngIf=\"!connection.isConnected()\">Connection: Down</p>\n      <button (click)=\"newGame()\">New Game</button>\n      \n    </div>\n        \n    <div class=\"my-hand\" [ngClass]=\"playCardRequested ? 'my-hand-my-go' : ''\">\n      <div>\n        <ng-template ngFor let-card [ngForOf]=\"myHand\">\n          <component-card (click)=\"cardSelected(card)\" class=\"myhand-card\" [value]=\"card\" [hidden]=\"false\" [selected]=\"false\" [playable]=\"true\"></component-card>\n        </ng-template>\n      </div>\n\n      <div class=\"my-prediction\" *ngIf=\"predictionRequested\">\n        <p>Make prediction!...</p>\n        <select [(ngModel)]=\"myPrediction\" class=\"my-prediction-select\" (change)=\"predictionSelected()\">\n          <optgroup>\n            <option *ngFor=\"let p of predictionRange\" class=\"prediction-option\" [ngValue]=\"p\">{{p}}</option>\n          </optgroup>\n        </select>\n      </div>\n    </div>\n\n    <div *ngIf=\"myHand && myHand.length > 0\" class=\"trumps\"><div>Trumps</div><div class=\"trump-style\" [ngStyle]=\"trumpsStyle\">{{trumps}}</div></div>\n\n  </div>\n\n  <div class=\"game-board\">\n\n    <div class=\"playing-area\">\n\n      <div class=\"current-trick-container\">\n        <ng-template ngFor let-card let-i=\"index\" [ngForOf]=\"currentTrick\">\n          <component-card [ngClass]=\"trickCardClass[i]\" [value]=\"card\" [hidden]=\"false\" [selected]=\"false\" [playable]=\"true\"></component-card>\n        </ng-template> \n      </div>\n\n      <div class=\"players\">\n        <ng-template ngFor let-player let-i=\"index\" [ngForOf]=\"players\">\n          <component-player class=\"player-container player-{{i}}\" [roundState]=\"roundState\" [player]=\"player\"></component-player>\n        </ng-template>\n      </div>\n\n    </div>\n\n  </div>\n\n  <div class=\"scoreboard\">\n    <component-scoreboard [scoreboard]=\"scoreboard\"></component-scoreboard>\n  </div>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}